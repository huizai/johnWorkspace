<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
         http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
         http://www.springframework.org/schema/context  
         http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	<!-- 配置JMS连接工厂 -->
	<!-- <bean id="connectionFactory" class="org.apache.activemq.spring.ActiveMQConnectionFactory"> -->
	<!-- <property name="brokerURL" value="tcp://localhost:61616" /> -->
	<!-- </bean> -->

	<!-- 自动扫描 -->
	<context:component-scan base-package="com.cn.hnust" />
	<!-- 配置视图解析器 如何把handler 方法返回值解析为实际的物理视图 -->	
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/view/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	<!-- 引入配置文件 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="/WEB-INF/configs/spring/jdbc.properties" />
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${initialSize}"></property>
		<!-- 连接池最大数量 -->
		<property name="maxActive" value="${maxActive}"></property>
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="${maxIdle}"></property>
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="${minIdle}"></property>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="${maxWait}"></property>
	</bean>

	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="com/cn/hnust/mapping/*.xml"></property>
		<property name="plugins">
			<array>
				<bean class="com.github.pagehelper.PageHelper">
					<property name="properties">
						<value>
							dialect=mysql
						</value>
					</property>
				</bean>
			</array>
		</property>

	</bean>

	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.cn.hnust.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- <bean id="connectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory"
		destroy-method="stop">
		<property name="connectionFactory">
			<bean class="org.apache.activemq.ActiveMQConnectionFactory">
				<property name="brokerURL">
					<value>tcp://localhost:61616</value>
				</property>
				<property name="useAsyncSend">
					<value>true</value>
				</property>
			</bean>
		</property>
	</bean>


	<bean id="connectionFactory_1" class="org.apache.activemq.pool.PooledConnectionFactory"
		destroy-method="stop">
		<property name="connectionFactory">
			<bean class="org.apache.activemq.ActiveMQConnectionFactory">
				<property name="brokerURL">
					<value>tcp://192.168.130.13:61616</value>
				</property>
				<property name="useAsyncSend">
					<value>true</value>
				</property>
			</bean>
		</property>
	</bean>

	发送消息的目的地（一个队列）
	<bean id="destination" class="org.apache.activemq.command.ActiveMQQueue">
		设置消息队列的名字
		<constructor-arg index="0" value="activeMQQueue" />
	</bean>


	消息转换
	<bean id="messageConverter" class="com.pis.activeMQ.ObjectMessageConverter" />


	配置JMS模版
	<bean id="jmsTemplate_1" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="messageConverter" ref="messageConverter" />
	</bean>

	<bean id="jmsTemplate_2" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="connectionFactory_1" />
		<property name="messageConverter" ref="messageConverter" />
	</bean>


	生产消息配置
	<bean id="queueProducer" class="com.pis.activeMQ.client.MessageProducer">
		<property name="destination" ref="destination" />
		<property name="jmsTemplate">
			<list>
				<ref bean="jmsTemplate_1" />
				<ref bean="jmsTemplate_2" />
			</list>
		</property>
	</bean>


	生产消息action bean
	<bean id="jmsAction" class="com.pis.action.JmsAction">
		<property name="queueProducer" ref="queueProducer" />
	</bean> -->
</beans>